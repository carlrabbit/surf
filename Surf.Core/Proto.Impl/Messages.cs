// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Surf.Proto {

  /// <summary>Holder for reflection information generated from Proto/messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90by9tZXNzYWdlcy5wcm90bxIEc3VyZhoVcHJvdG8vYmFzZVR5cGVz",
            "LnByb3RvGhJwcm90by9nb3NzaXAucHJvdG8ikQEKD01lc3NhZ2VFbnZlbG9w",
            "ZRIaCgRwaW5nGAEgASgLMgouc3VyZi5QaW5nSAASIAoHcGluZ1JlcRgCIAEo",
            "CzINLnN1cmYuUGluZ1JlcUgAEhgKA2FjaxgDIAEoCzIJLnN1cmYuQWNrSAAS",
            "HgoGYWNrUmVxGAQgASgLMgwuc3VyZi5BY2tSZXFIAEIGCgR0eXBlIj8KBFBp",
            "bmcSJAoGZ29zc2lwGAEgAygLMhQuc3VyZi5Hb3NzaXBFbnZlbG9wZRIRCgls",
            "b2NhbFRpbWUYAiABKA8ibAoHUGluZ1JlcRInCgpmcm9tTWVtYmVyGAEgASgL",
            "MhMuc3VyZi5NZW1iZXJBZGRyZXNzEiUKCHRvTWVtYmVyGAIgASgLMhMuc3Vy",
            "Zi5NZW1iZXJBZGRyZXNzEhEKCWxvY2FsVGltZRgDIAEoDyIYCgNBY2sSEQoJ",
            "bG9jYWxUaW1lGAEgASgPImsKBkFja1JlcRInCgpmcm9tTWVtYmVyGAEgASgL",
            "MhMuc3VyZi5NZW1iZXJBZGRyZXNzEiUKCHRvTWVtYmVyGAIgASgLMhMuc3Vy",
            "Zi5NZW1iZXJBZGRyZXNzEhEKCWxvY2FsVGltZRgDIAEoD0INqgIKU3VyZi5Q",
            "cm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Surf.Proto.BaseTypesReflection.Descriptor, global::Surf.Proto.GossipReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.MessageEnvelope), global::Surf.Proto.MessageEnvelope.Parser, new[]{ "Ping", "PingReq", "Ack", "AckReq" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.Ping), global::Surf.Proto.Ping.Parser, new[]{ "Gossip", "LocalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.PingReq), global::Surf.Proto.PingReq.Parser, new[]{ "FromMember", "ToMember", "LocalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.Ack), global::Surf.Proto.Ack.Parser, new[]{ "LocalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.AckReq), global::Surf.Proto.AckReq.Parser, new[]{ "FromMember", "ToMember", "LocalTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageEnvelope : pb::IMessage<MessageEnvelope> {
    private static readonly pb::MessageParser<MessageEnvelope> _parser = new pb::MessageParser<MessageEnvelope>(() => new MessageEnvelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageEnvelope(MessageEnvelope other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case TypeOneofCase.PingReq:
          PingReq = other.PingReq.Clone();
          break;
        case TypeOneofCase.Ack:
          Ack = other.Ack.Clone();
          break;
        case TypeOneofCase.AckReq:
          AckReq = other.AckReq.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageEnvelope Clone() {
      return new MessageEnvelope(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.Ping Ping {
      get { return typeCase_ == TypeOneofCase.Ping ? (global::Surf.Proto.Ping) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "pingReq" field.</summary>
    public const int PingReqFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.PingReq PingReq {
      get { return typeCase_ == TypeOneofCase.PingReq ? (global::Surf.Proto.PingReq) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PingReq;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.Ack Ack {
      get { return typeCase_ == TypeOneofCase.Ack ? (global::Surf.Proto.Ack) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Ack;
      }
    }

    /// <summary>Field number for the "ackReq" field.</summary>
    public const int AckReqFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.AckReq AckReq {
      get { return typeCase_ == TypeOneofCase.AckReq ? (global::Surf.Proto.AckReq) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.AckReq;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Ping = 1,
      PingReq = 2,
      Ack = 3,
      AckReq = 4,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(PingReq, other.PingReq)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(AckReq, other.AckReq)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (typeCase_ == TypeOneofCase.PingReq) hash ^= PingReq.GetHashCode();
      if (typeCase_ == TypeOneofCase.Ack) hash ^= Ack.GetHashCode();
      if (typeCase_ == TypeOneofCase.AckReq) hash ^= AckReq.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Ping) {
        output.WriteRawTag(10);
        output.WriteMessage(Ping);
      }
      if (typeCase_ == TypeOneofCase.PingReq) {
        output.WriteRawTag(18);
        output.WriteMessage(PingReq);
      }
      if (typeCase_ == TypeOneofCase.Ack) {
        output.WriteRawTag(26);
        output.WriteMessage(Ack);
      }
      if (typeCase_ == TypeOneofCase.AckReq) {
        output.WriteRawTag(34);
        output.WriteMessage(AckReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Ping) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (typeCase_ == TypeOneofCase.PingReq) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingReq);
      }
      if (typeCase_ == TypeOneofCase.Ack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (typeCase_ == TypeOneofCase.AckReq) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageEnvelope other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Surf.Proto.Ping();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case TypeOneofCase.PingReq:
          if (PingReq == null) {
            PingReq = new global::Surf.Proto.PingReq();
          }
          PingReq.MergeFrom(other.PingReq);
          break;
        case TypeOneofCase.Ack:
          if (Ack == null) {
            Ack = new global::Surf.Proto.Ack();
          }
          Ack.MergeFrom(other.Ack);
          break;
        case TypeOneofCase.AckReq:
          if (AckReq == null) {
            AckReq = new global::Surf.Proto.AckReq();
          }
          AckReq.MergeFrom(other.AckReq);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Surf.Proto.Ping subBuilder = new global::Surf.Proto.Ping();
            if (typeCase_ == TypeOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 18: {
            global::Surf.Proto.PingReq subBuilder = new global::Surf.Proto.PingReq();
            if (typeCase_ == TypeOneofCase.PingReq) {
              subBuilder.MergeFrom(PingReq);
            }
            input.ReadMessage(subBuilder);
            PingReq = subBuilder;
            break;
          }
          case 26: {
            global::Surf.Proto.Ack subBuilder = new global::Surf.Proto.Ack();
            if (typeCase_ == TypeOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
          case 34: {
            global::Surf.Proto.AckReq subBuilder = new global::Surf.Proto.AckReq();
            if (typeCase_ == TypeOneofCase.AckReq) {
              subBuilder.MergeFrom(AckReq);
            }
            input.ReadMessage(subBuilder);
            AckReq = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ping : pb::IMessage<Ping> {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping(Ping other) : this() {
      gossip_ = other.gossip_.Clone();
      localTime_ = other.localTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping Clone() {
      return new Ping(this);
    }

    /// <summary>Field number for the "gossip" field.</summary>
    public const int GossipFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Surf.Proto.GossipEnvelope> _repeated_gossip_codec
        = pb::FieldCodec.ForMessage(10, global::Surf.Proto.GossipEnvelope.Parser);
    private readonly pbc::RepeatedField<global::Surf.Proto.GossipEnvelope> gossip_ = new pbc::RepeatedField<global::Surf.Proto.GossipEnvelope>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Surf.Proto.GossipEnvelope> Gossip {
      get { return gossip_; }
    }

    /// <summary>Field number for the "localTime" field.</summary>
    public const int LocalTimeFieldNumber = 2;
    private int localTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalTime {
      get { return localTime_; }
      set {
        localTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gossip_.Equals(other.gossip_)) return false;
      if (LocalTime != other.LocalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gossip_.GetHashCode();
      if (LocalTime != 0) hash ^= LocalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gossip_.WriteTo(output, _repeated_gossip_codec);
      if (LocalTime != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(LocalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gossip_.CalculateSize(_repeated_gossip_codec);
      if (LocalTime != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      gossip_.Add(other.gossip_);
      if (other.LocalTime != 0) {
        LocalTime = other.LocalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gossip_.AddEntriesFrom(input, _repeated_gossip_codec);
            break;
          }
          case 21: {
            LocalTime = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingReq : pb::IMessage<PingReq> {
    private static readonly pb::MessageParser<PingReq> _parser = new pb::MessageParser<PingReq>(() => new PingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReq(PingReq other) : this() {
      fromMember_ = other.fromMember_ != null ? other.fromMember_.Clone() : null;
      toMember_ = other.toMember_ != null ? other.toMember_.Clone() : null;
      localTime_ = other.localTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReq Clone() {
      return new PingReq(this);
    }

    /// <summary>Field number for the "fromMember" field.</summary>
    public const int FromMemberFieldNumber = 1;
    private global::Surf.Proto.MemberAddress fromMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.MemberAddress FromMember {
      get { return fromMember_; }
      set {
        fromMember_ = value;
      }
    }

    /// <summary>Field number for the "toMember" field.</summary>
    public const int ToMemberFieldNumber = 2;
    private global::Surf.Proto.MemberAddress toMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.MemberAddress ToMember {
      get { return toMember_; }
      set {
        toMember_ = value;
      }
    }

    /// <summary>Field number for the "localTime" field.</summary>
    public const int LocalTimeFieldNumber = 3;
    private int localTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalTime {
      get { return localTime_; }
      set {
        localTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromMember, other.FromMember)) return false;
      if (!object.Equals(ToMember, other.ToMember)) return false;
      if (LocalTime != other.LocalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromMember_ != null) hash ^= FromMember.GetHashCode();
      if (toMember_ != null) hash ^= ToMember.GetHashCode();
      if (LocalTime != 0) hash ^= LocalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromMember_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromMember);
      }
      if (toMember_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ToMember);
      }
      if (LocalTime != 0) {
        output.WriteRawTag(29);
        output.WriteSFixed32(LocalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromMember_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromMember);
      }
      if (toMember_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToMember);
      }
      if (LocalTime != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingReq other) {
      if (other == null) {
        return;
      }
      if (other.fromMember_ != null) {
        if (fromMember_ == null) {
          FromMember = new global::Surf.Proto.MemberAddress();
        }
        FromMember.MergeFrom(other.FromMember);
      }
      if (other.toMember_ != null) {
        if (toMember_ == null) {
          ToMember = new global::Surf.Proto.MemberAddress();
        }
        ToMember.MergeFrom(other.ToMember);
      }
      if (other.LocalTime != 0) {
        LocalTime = other.LocalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromMember_ == null) {
              FromMember = new global::Surf.Proto.MemberAddress();
            }
            input.ReadMessage(FromMember);
            break;
          }
          case 18: {
            if (toMember_ == null) {
              ToMember = new global::Surf.Proto.MemberAddress();
            }
            input.ReadMessage(ToMember);
            break;
          }
          case 29: {
            LocalTime = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ack : pb::IMessage<Ack> {
    private static readonly pb::MessageParser<Ack> _parser = new pb::MessageParser<Ack>(() => new Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack(Ack other) : this() {
      localTime_ = other.localTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack Clone() {
      return new Ack(this);
    }

    /// <summary>Field number for the "localTime" field.</summary>
    public const int LocalTimeFieldNumber = 1;
    private int localTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalTime {
      get { return localTime_; }
      set {
        localTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalTime != other.LocalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalTime != 0) hash ^= LocalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LocalTime != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(LocalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocalTime != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ack other) {
      if (other == null) {
        return;
      }
      if (other.LocalTime != 0) {
        LocalTime = other.LocalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            LocalTime = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AckReq : pb::IMessage<AckReq> {
    private static readonly pb::MessageParser<AckReq> _parser = new pb::MessageParser<AckReq>(() => new AckReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckReq(AckReq other) : this() {
      fromMember_ = other.fromMember_ != null ? other.fromMember_.Clone() : null;
      toMember_ = other.toMember_ != null ? other.toMember_.Clone() : null;
      localTime_ = other.localTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckReq Clone() {
      return new AckReq(this);
    }

    /// <summary>Field number for the "fromMember" field.</summary>
    public const int FromMemberFieldNumber = 1;
    private global::Surf.Proto.MemberAddress fromMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.MemberAddress FromMember {
      get { return fromMember_; }
      set {
        fromMember_ = value;
      }
    }

    /// <summary>Field number for the "toMember" field.</summary>
    public const int ToMemberFieldNumber = 2;
    private global::Surf.Proto.MemberAddress toMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Surf.Proto.MemberAddress ToMember {
      get { return toMember_; }
      set {
        toMember_ = value;
      }
    }

    /// <summary>Field number for the "localTime" field.</summary>
    public const int LocalTimeFieldNumber = 3;
    private int localTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalTime {
      get { return localTime_; }
      set {
        localTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromMember, other.FromMember)) return false;
      if (!object.Equals(ToMember, other.ToMember)) return false;
      if (LocalTime != other.LocalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromMember_ != null) hash ^= FromMember.GetHashCode();
      if (toMember_ != null) hash ^= ToMember.GetHashCode();
      if (LocalTime != 0) hash ^= LocalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromMember_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromMember);
      }
      if (toMember_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ToMember);
      }
      if (LocalTime != 0) {
        output.WriteRawTag(29);
        output.WriteSFixed32(LocalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromMember_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromMember);
      }
      if (toMember_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToMember);
      }
      if (LocalTime != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckReq other) {
      if (other == null) {
        return;
      }
      if (other.fromMember_ != null) {
        if (fromMember_ == null) {
          FromMember = new global::Surf.Proto.MemberAddress();
        }
        FromMember.MergeFrom(other.FromMember);
      }
      if (other.toMember_ != null) {
        if (toMember_ == null) {
          ToMember = new global::Surf.Proto.MemberAddress();
        }
        ToMember.MergeFrom(other.ToMember);
      }
      if (other.LocalTime != 0) {
        LocalTime = other.LocalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromMember_ == null) {
              FromMember = new global::Surf.Proto.MemberAddress();
            }
            input.ReadMessage(FromMember);
            break;
          }
          case 18: {
            if (toMember_ == null) {
              ToMember = new global::Surf.Proto.MemberAddress();
            }
            input.ReadMessage(ToMember);
            break;
          }
          case 29: {
            LocalTime = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
