// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/baseTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Surf.Proto {

  /// <summary>Holder for reflection information generated from Proto/baseTypes.proto</summary>
  public static partial class BaseTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/baseTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90by9iYXNlVHlwZXMucHJvdG8SBHN1cmYiQwoNTWVtYmVyQWRkcmVz",
            "cxIMCgJ2NBgBIAEoB0gAEgwKAnY2GAIgASgMSAASDAoEcG9ydBgDIAEoD0II",
            "CgZpcEFkZHJCDaoCClN1cmYuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Surf.Proto.MemberAddress), global::Surf.Proto.MemberAddress.Parser, new[]{ "V4", "V6", "Port" }, new[]{ "IpAddr" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MemberAddress : pb::IMessage<MemberAddress> {
    private static readonly pb::MessageParser<MemberAddress> _parser = new pb::MessageParser<MemberAddress>(() => new MemberAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Surf.Proto.BaseTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAddress(MemberAddress other) : this() {
      port_ = other.port_;
      switch (other.IpAddrCase) {
        case IpAddrOneofCase.V4:
          V4 = other.V4;
          break;
        case IpAddrOneofCase.V6:
          V6 = other.V6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAddress Clone() {
      return new MemberAddress(this);
    }

    /// <summary>Field number for the "v4" field.</summary>
    public const int V4FieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint V4 {
      get { return ipAddrCase_ == IpAddrOneofCase.V4 ? (uint) ipAddr_ : 0; }
      set {
        ipAddr_ = value;
        ipAddrCase_ = IpAddrOneofCase.V4;
      }
    }

    /// <summary>Field number for the "v6" field.</summary>
    public const int V6FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString V6 {
      get { return ipAddrCase_ == IpAddrOneofCase.V6 ? (pb::ByteString) ipAddr_ : pb::ByteString.Empty; }
      set {
        ipAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ipAddrCase_ = IpAddrOneofCase.V6;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    private object ipAddr_;
    /// <summary>Enum of possible cases for the "ipAddr" oneof.</summary>
    public enum IpAddrOneofCase {
      None = 0,
      V4 = 1,
      V6 = 2,
    }
    private IpAddrOneofCase ipAddrCase_ = IpAddrOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpAddrOneofCase IpAddrCase {
      get { return ipAddrCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIpAddr() {
      ipAddrCase_ = IpAddrOneofCase.None;
      ipAddr_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (V4 != other.V4) return false;
      if (V6 != other.V6) return false;
      if (Port != other.Port) return false;
      if (IpAddrCase != other.IpAddrCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ipAddrCase_ == IpAddrOneofCase.V4) hash ^= V4.GetHashCode();
      if (ipAddrCase_ == IpAddrOneofCase.V6) hash ^= V6.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      hash ^= (int) ipAddrCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ipAddrCase_ == IpAddrOneofCase.V4) {
        output.WriteRawTag(13);
        output.WriteFixed32(V4);
      }
      if (ipAddrCase_ == IpAddrOneofCase.V6) {
        output.WriteRawTag(18);
        output.WriteBytes(V6);
      }
      if (Port != 0) {
        output.WriteRawTag(29);
        output.WriteSFixed32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ipAddrCase_ == IpAddrOneofCase.V4) {
        size += 1 + 4;
      }
      if (ipAddrCase_ == IpAddrOneofCase.V6) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(V6);
      }
      if (Port != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberAddress other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      switch (other.IpAddrCase) {
        case IpAddrOneofCase.V4:
          V4 = other.V4;
          break;
        case IpAddrOneofCase.V6:
          V6 = other.V6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            V4 = input.ReadFixed32();
            break;
          }
          case 18: {
            V6 = input.ReadBytes();
            break;
          }
          case 29: {
            Port = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
